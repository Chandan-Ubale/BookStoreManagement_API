
C:\Users\ChandanG\source\repos\BookStoreAPI>(
echo C:\Users\ChandanG\source\repos\BookStoreAPI\BooksCore\Interface\IBookRepository.cs  
 type "C:\Users\ChandanG\source\repos\BookStoreAPI\BooksCore\Interface\IBookRepository.cs"  
 echo.
) 
C:\Users\ChandanG\source\repos\BookStoreAPI\BooksCore\Interface\IBookRepository.cs
﻿using Books_Core.Models;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Books_Core.Interface
{
    public interface IBookRepository
    {
        List<Books> GetAllBooks();
        Books? GetBookById(string id);
        void AddBook(Books book);
        void AddBooksBulk(List<Books> books);
        void UpdateBook(string id, Books bookIn);
        void DeleteBook(string id);
    }
}


C:\Users\ChandanG\source\repos\BookStoreAPI>(
echo C:\Users\ChandanG\source\repos\BookStoreAPI\BooksCore\Interface\IBooks.cs  
 type "C:\Users\ChandanG\source\repos\BookStoreAPI\BooksCore\Interface\IBooks.cs"  
 echo.
) 
C:\Users\ChandanG\source\repos\BookStoreAPI\BooksCore\Interface\IBooks.cs
﻿using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Books_Core.Interface
{
    public interface IBooks
    {
        string? Id { get; set; }
        string? Title { get; set; }
        string? Author { get; set; }
        decimal Price { get; set; }
    }
}


C:\Users\ChandanG\source\repos\BookStoreAPI>(
echo C:\Users\ChandanG\source\repos\BookStoreAPI\BooksCore\Interface\IBookServices.cs  
 type "C:\Users\ChandanG\source\repos\BookStoreAPI\BooksCore\Interface\IBookServices.cs"  
 echo.
) 
C:\Users\ChandanG\source\repos\BookStoreAPI\BooksCore\Interface\IBookServices.cs
﻿using Books_Core.Models;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Books_Core.Interface
{
    public interface IBookServices
    {
        List<Books> GetAllBooks();
        Books? GetBookById(string id);
        void AddBook(Books book);
        void AddBooksBulk(List<Books> books);
        void UpdateBook(string id, Books bookIn);
        void DeleteBook(string id);
    }
}


C:\Users\ChandanG\source\repos\BookStoreAPI>(
echo C:\Users\ChandanG\source\repos\BookStoreAPI\BooksCore\Models\Books.cs  
 type "C:\Users\ChandanG\source\repos\BookStoreAPI\BooksCore\Models\Books.cs"  
 echo.. 
) 
C:\Users\ChandanG\source\repos\BookStoreAPI\BooksCore\Models\Books.cs
﻿using Books_Core.Interface;
using MongoDB.Bson;
using MongoDB.Bson.Serialization.Attributes;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
namespace Books_Core.Models
{
    public class Books :IBooks
    {
        [BsonId]
        [BsonRepresentation(BsonType.ObjectId)]
        public string? Id { get; set; }

        [BsonElement("Title")]
        public string? Title { get; set; }

        [BsonElement("Author")]
        public string? Author { get; set; }

        [BsonElement("Price")]
        public decimal Price { get; set; }
    }
}
.

C:\Users\ChandanG\source\repos\BookStoreAPI>(
echo C:\Users\ChandanG\source\repos\BookStoreAPI\BooksCore\Models\BookstoreDatabaseSettings.cs  
 type "C:\Users\ChandanG\source\repos\BookStoreAPI\BooksCore\Models\BookstoreDatabaseSettings.cs"  
 echo.. 
) 
C:\Users\ChandanG\source\repos\BookStoreAPI\BooksCore\Models\BookstoreDatabaseSettings.cs
﻿using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Books_Core.Models
{
    public class BookstoreDatabaseSettings
    {
        public string ConnectionString { get; set; } = null!;
        public string DatabaseName { get; set; } = null!;
        public string BooksCollectionName { get; set; } = null!;
    }
}
.

C:\Users\ChandanG\source\repos\BookStoreAPI>(
echo C:\Users\ChandanG\source\repos\BookStoreAPI\BooksCore\obj\Debug\net8.0\.NETCoreApp,Version=v8.0.AssemblyAttributes.cs  
 type "C:\Users\ChandanG\source\repos\BookStoreAPI\BooksCore\obj\Debug\net8.0\.NETCoreApp,Version=v8.0.AssemblyAttributes.cs"  
 echo.. 
) 
C:\Users\ChandanG\source\repos\BookStoreAPI\BooksCore\obj\Debug\net8.0\.NETCoreApp,Version=v8.0.AssemblyAttributes.cs
// <autogenerated />
using System;
using System.Reflection;
[assembly: global::System.Runtime.Versioning.TargetFrameworkAttribute(".NETCoreApp,Version=v8.0", FrameworkDisplayName = ".NET 8.0")]
.

C:\Users\ChandanG\source\repos\BookStoreAPI>(
echo C:\Users\ChandanG\source\repos\BookStoreAPI\BooksCore\obj\Debug\net8.0\BooksCore.AssemblyInfo.cs  
 type "C:\Users\ChandanG\source\repos\BookStoreAPI\BooksCore\obj\Debug\net8.0\BooksCore.AssemblyInfo.cs"  
 echo.. 
) 
C:\Users\ChandanG\source\repos\BookStoreAPI\BooksCore\obj\Debug\net8.0\BooksCore.AssemblyInfo.cs
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Reflection;

[assembly: System.Reflection.AssemblyCompanyAttribute("BooksCore")]
[assembly: System.Reflection.AssemblyConfigurationAttribute("Debug")]
[assembly: System.Reflection.AssemblyFileVersionAttribute("1.0.0.0")]
[assembly: System.Reflection.AssemblyInformationalVersionAttribute("1.0.0")]
[assembly: System.Reflection.AssemblyProductAttribute("BooksCore")]
[assembly: System.Reflection.AssemblyTitleAttribute("BooksCore")]
[assembly: System.Reflection.AssemblyVersionAttribute("1.0.0.0")]

// Generated by the MSBuild WriteCodeFragment class.

.

C:\Users\ChandanG\source\repos\BookStoreAPI>(
echo C:\Users\ChandanG\source\repos\BookStoreAPI\BooksCore\obj\Debug\net8.0\BooksCore.GlobalUsings.g.cs  
 type "C:\Users\ChandanG\source\repos\BookStoreAPI\BooksCore\obj\Debug\net8.0\BooksCore.GlobalUsings.g.cs"  
 echo.. 
) 
C:\Users\ChandanG\source\repos\BookStoreAPI\BooksCore\obj\Debug\net8.0\BooksCore.GlobalUsings.g.cs
// <auto-generated/>
global using global::System;
global using global::System.Collections.Generic;
global using global::System.IO;
global using global::System.Linq;
global using global::System.Net.Http;
global using global::System.Threading;
global using global::System.Threading.Tasks;
.

C:\Users\ChandanG\source\repos\BookStoreAPI>(
echo C:\Users\ChandanG\source\repos\BookStoreAPI\BooksCore\obj\Debug\net8.0\Books_Core.AssemblyInfo.cs  
 type "C:\Users\ChandanG\source\repos\BookStoreAPI\BooksCore\obj\Debug\net8.0\Books_Core.AssemblyInfo.cs"  
 echo.. 
) 
C:\Users\ChandanG\source\repos\BookStoreAPI\BooksCore\obj\Debug\net8.0\Books_Core.AssemblyInfo.cs
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Reflection;

[assembly: System.Reflection.AssemblyCompanyAttribute("Books_Core")]
[assembly: System.Reflection.AssemblyConfigurationAttribute("Debug")]
[assembly: System.Reflection.AssemblyFileVersionAttribute("1.0.0.0")]
[assembly: System.Reflection.AssemblyInformationalVersionAttribute("1.0.0+0472d8c1c5b0d0cdefbcb7bac94e6549dac638be")]
[assembly: System.Reflection.AssemblyProductAttribute("Books_Core")]
[assembly: System.Reflection.AssemblyTitleAttribute("Books_Core")]
[assembly: System.Reflection.AssemblyVersionAttribute("1.0.0.0")]

// Generated by the MSBuild WriteCodeFragment class.

.

C:\Users\ChandanG\source\repos\BookStoreAPI>(
echo C:\Users\ChandanG\source\repos\BookStoreAPI\BooksCore\obj\Debug\net8.0\Books_Core.GlobalUsings.g.cs  
 type "C:\Users\ChandanG\source\repos\BookStoreAPI\BooksCore\obj\Debug\net8.0\Books_Core.GlobalUsings.g.cs"  
 echo.. 
) 
C:\Users\ChandanG\source\repos\BookStoreAPI\BooksCore\obj\Debug\net8.0\Books_Core.GlobalUsings.g.cs
// <auto-generated/>
global using global::System;
global using global::System.Collections.Generic;
global using global::System.IO;
global using global::System.Linq;
global using global::System.Net.Http;
global using global::System.Threading;
global using global::System.Threading.Tasks;
.

C:\Users\ChandanG\source\repos\BookStoreAPI>(
echo C:\Users\ChandanG\source\repos\BookStoreAPI\BookStoreAPI\Program.cs  
 type "C:\Users\ChandanG\source\repos\BookStoreAPI\BookStoreAPI\Program.cs"  
 echo.. 
) 
C:\Users\ChandanG\source\repos\BookStoreAPI\BookStoreAPI\Program.cs
using Books_Core.Interface;
using Books_Core.Models;
using Books_Infrastructure.Data;
using Books_Infrastructure.Repositories;
using Books_Services.Services;
using Microsoft.OpenApi.Models;

var builder = WebApplication.CreateBuilder(args);

// Bind appsettings.json -> BookstoreDatabaseSettings
builder.Services.Configure<BookstoreDatabaseSettings>(
    builder.Configuration.GetSection("BookstoreDatabaseSettings"));

// Register infrastructure and services
builder.Services.AddSingleton<MongoDbContext>();
builder.Services.AddScoped<IBookRepository, BookRepository>();
builder.Services.AddScoped<IBookServices, BookService>();

// Add controllers + Swagger
builder.Services.AddControllers();
builder.Services.AddEndpointsApiExplorer();
builder.Services.AddSwaggerGen(c =>
{
    c.SwaggerDoc("v1", new OpenApiInfo
    {
        Title = "BookStoreManagement API",
        Version = "v1",
        Description = "API for managing books in a bookstore",
        Contact = new OpenApiContact
        {
            Name = "Chandan.G",
            Email = "chandan.g@cmartsolutions.com"
        }
    });
    c.EnableAnnotations();
});

var app = builder.Build();

// Enable Swagger only in development
if (app.Environment.IsDevelopment())
{
    app.UseSwagger();
    app.UseSwaggerUI(c =>
    {
        c.SwaggerEndpoint("/swagger/v1/swagger.json", "BookStoreManagement API v1");
    });
}

app.UseAuthorization();
app.MapControllers();
app.Run();
.

C:\Users\ChandanG\source\repos\BookStoreAPI>(
echo C:\Users\ChandanG\source\repos\BookStoreAPI\BookStoreAPI\Controllers\BooksController.cs  
 type "C:\Users\ChandanG\source\repos\BookStoreAPI\BookStoreAPI\Controllers\BooksController.cs"  
 echo.. 
) 
C:\Users\ChandanG\source\repos\BookStoreAPI\BookStoreAPI\Controllers\BooksController.cs
using Books_Core.Interface;
using Books_Core.Models;
using Books_Services.Services;
using Microsoft.AspNetCore.Mvc;
using Swashbuckle.AspNetCore.Annotations;

namespace BookStoreAPI.Controllers
{
    [ApiController]
    [Route("[controller]")]
    public class BooksController : ControllerBase   
    {
        private readonly IBookServices _bookService;   

        public BooksController(IBookServices bookService)  
        {
            _bookService = bookService;
        }

        [HttpGet]
        [SwaggerOperation(Summary = "Get all books")]
        public ActionResult<List<Books>> Get() => _bookService.GetAllBooks();

        [HttpGet("{id:length(24)}", Name = "GetBook")]
        [SwaggerOperation(Summary = "Get book by ID")]
        public ActionResult<Books> Get(string id)
        {
            var book = _bookService.GetBookById(id);
            if (book == null) return NotFound();
            return book;
        }

        [HttpPost("add-one", Name = "AddOneBook")]
        [SwaggerOperation(Summary = "Add one book")]
        public ActionResult<Books> Create(Books book)
        {
            _bookService.AddBook(book);
            return CreatedAtRoute("GetBook", new { id = book.Id }, book);
        }

        [HttpPost("bulk-add", Name = "AddBooksInBulk")]
        [SwaggerOperation(Summary = "Add multiple books in bulk")]
        public ActionResult<List<Books>> CreateBulk(List<Books> books)
        {
            _bookService.AddBooksBulk(books);
            return Created("", books);
        }

        [HttpPut("{id:length(24)}", Name = "UpdateBookById")]
        [SwaggerOperation(Summary = "Update book by ID")]
        public IActionResult Update(string id, Books bookIn)
        {
            try
            {
                _bookService.UpdateBook(id, bookIn);
                return NoContent();
            }
            catch (KeyNotFoundException)
            {
                return NotFound();
            }
            catch (ArgumentException ex)
            {
                return BadRequest(ex.Message);
            }
        }

        [HttpDelete("{id:length(24)}", Name = "DeleteBookById")]
        [SwaggerOperation(Summary = "Delete book by ID")]
        public IActionResult Delete(string id)
        {
            try
            {
                _bookService.DeleteBook(id);
                return NoContent();
            }
            catch (KeyNotFoundException)
            {
                return NotFound();
            }
        }
    }
}
.

C:\Users\ChandanG\source\repos\BookStoreAPI>(
echo C:\Users\ChandanG\source\repos\BookStoreAPI\BookStoreAPI\obj\Debug\net8.0\.NETCoreApp,Version=v8.0.AssemblyAttributes.cs  
 type "C:\Users\ChandanG\source\repos\BookStoreAPI\BookStoreAPI\obj\Debug\net8.0\.NETCoreApp,Version=v8.0.AssemblyAttributes.cs"  
 echo.. 
) 
C:\Users\ChandanG\source\repos\BookStoreAPI\BookStoreAPI\obj\Debug\net8.0\.NETCoreApp,Version=v8.0.AssemblyAttributes.cs
// <autogenerated />
using System;
using System.Reflection;
[assembly: global::System.Runtime.Versioning.TargetFrameworkAttribute(".NETCoreApp,Version=v8.0", FrameworkDisplayName = ".NET 8.0")]
.

C:\Users\ChandanG\source\repos\BookStoreAPI>(
echo C:\Users\ChandanG\source\repos\BookStoreAPI\BookStoreAPI\obj\Debug\net8.0\BookStoreAPI.AssemblyInfo.cs  
 type "C:\Users\ChandanG\source\repos\BookStoreAPI\BookStoreAPI\obj\Debug\net8.0\BookStoreAPI.AssemblyInfo.cs"  
 echo.. 
) 
C:\Users\ChandanG\source\repos\BookStoreAPI\BookStoreAPI\obj\Debug\net8.0\BookStoreAPI.AssemblyInfo.cs
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Reflection;

[assembly: Microsoft.Extensions.Configuration.UserSecrets.UserSecretsIdAttribute("fae1d396-7ebf-48e9-a9a4-7c5b282c05ac")]
[assembly: System.Reflection.AssemblyCompanyAttribute("BookStoreAPI")]
[assembly: System.Reflection.AssemblyConfigurationAttribute("Debug")]
[assembly: System.Reflection.AssemblyFileVersionAttribute("1.0.0.0")]
[assembly: System.Reflection.AssemblyInformationalVersionAttribute("1.0.0+76cb3cf03fb861ce0dd237dd183a126ceb8b68ea")]
[assembly: System.Reflection.AssemblyProductAttribute("BookStoreAPI")]
[assembly: System.Reflection.AssemblyTitleAttribute("BookStoreAPI")]
[assembly: System.Reflection.AssemblyVersionAttribute("1.0.0.0")]

// Generated by the MSBuild WriteCodeFragment class.

.

C:\Users\ChandanG\source\repos\BookStoreAPI>(
echo C:\Users\ChandanG\source\repos\BookStoreAPI\BookStoreAPI\obj\Debug\net8.0\BookStoreAPI.GlobalUsings.g.cs  
 type "C:\Users\ChandanG\source\repos\BookStoreAPI\BookStoreAPI\obj\Debug\net8.0\BookStoreAPI.GlobalUsings.g.cs"  
 echo.. 
) 
C:\Users\ChandanG\source\repos\BookStoreAPI\BookStoreAPI\obj\Debug\net8.0\BookStoreAPI.GlobalUsings.g.cs
// <auto-generated/>
global using global::Microsoft.AspNetCore.Builder;
global using global::Microsoft.AspNetCore.Hosting;
global using global::Microsoft.AspNetCore.Http;
global using global::Microsoft.AspNetCore.Routing;
global using global::Microsoft.Extensions.Configuration;
global using global::Microsoft.Extensions.DependencyInjection;
global using global::Microsoft.Extensions.Hosting;
global using global::Microsoft.Extensions.Logging;
global using global::System;
global using global::System.Collections.Generic;
global using global::System.IO;
global using global::System.Linq;
global using global::System.Net.Http;
global using global::System.Net.Http.Json;
global using global::System.Threading;
global using global::System.Threading.Tasks;
.

C:\Users\ChandanG\source\repos\BookStoreAPI>(
echo C:\Users\ChandanG\source\repos\BookStoreAPI\BookStoreAPI\obj\Debug\net8.0\BookStoreAPI.MvcApplicationPartsAssemblyInfo.cs  
 type "C:\Users\ChandanG\source\repos\BookStoreAPI\BookStoreAPI\obj\Debug\net8.0\BookStoreAPI.MvcApplicationPartsAssemblyInfo.cs"  
 echo.. 
) 
C:\Users\ChandanG\source\repos\BookStoreAPI\BookStoreAPI\obj\Debug\net8.0\BookStoreAPI.MvcApplicationPartsAssemblyInfo.cs
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Reflection;

[assembly: Microsoft.AspNetCore.Mvc.ApplicationParts.ApplicationPartAttribute("Swashbuckle.AspNetCore.Annotations")]
[assembly: Microsoft.AspNetCore.Mvc.ApplicationParts.ApplicationPartAttribute("Swashbuckle.AspNetCore.SwaggerGen")]

// Generated by the MSBuild WriteCodeFragment class.

.

C:\Users\ChandanG\source\repos\BookStoreAPI>(
echo C:\Users\ChandanG\source\repos\BookStoreAPI\BookStoreAPI.Tests\BookServiceTests.cs  
 type "C:\Users\ChandanG\source\repos\BookStoreAPI\BookStoreAPI.Tests\BookServiceTests.cs"  
 echo.. 
) 
C:\Users\ChandanG\source\repos\BookStoreAPI\BookStoreAPI.Tests\BookServiceTests.cs
using Books_Core.Interface;
using Books_Core.Models;
using Books_Services.Services;
using Moq;
using System;
using System.Collections.Generic;
using Xunit;

namespace BookStoreAPI.Tests
{
    public class BookServiceTests
    {
        private readonly Mock<IBookRepository> _mockRepo;
        private readonly BookService _service;

        public BookServiceTests()
        {
            _mockRepo = new Mock<IBookRepository>();
            _service = new BookService(_mockRepo.Object);
        }

        [Fact]
        public void GetAllBooks_ReturnsAllBooks()
        {
            // Arrange
            var books = new List<Books>
            {
                new Books { Id = "1", Title = "Book 1", Author = "Author 1", Price = 100 },
                new Books { Id = "2", Title = "Book 2", Author = "Author 2", Price = 200 }
            };
            _mockRepo.Setup(r => r.GetAllBooks()).Returns(books);

            // Act
            var result = _service.GetAllBooks();

            // Assert
            Assert.Equal(2, result.Count);
            Assert.Equal("Book 1", result[0].Title);
        }

        [Fact]
        public void GetBookById_ExistingId_ReturnsBook()
        {
            // Arrange
            var book = new Books { Id = "1", Title = "Book 1", Author = "Author 1", Price = 100 };
            _mockRepo.Setup(r => r.GetBookById("1")).Returns(book);

            // Act
            var result = _service.GetBookById("1");

            // Assert
            Assert.NotNull(result);
            Assert.Equal("Book 1", result.Title);
        }

        [Fact]
        public void GetBookById_NonExistingId_ReturnsNull()
        {
            // Arrange
            _mockRepo.Setup(r => r.GetBookById("99")).Returns((Books?)null);

            // Act
            var result = _service.GetBookById("99");

            // Assert
            Assert.Null(result);
        }

        [Fact]
        public void AddBook_CallsRepositoryOnce()
        {
            // Arrange
            var book = new Books { Id = "1", Title = "Book 1", Author = "Author 1", Price = 100 };

            // Act
            _service.AddBook(book);

            // Assert
            _mockRepo.Verify(r => r.AddBook(book), Times.Once);
        }

        [Fact]
        public void AddBooksBulk_CallsRepositoryOnce()
        {
            // Arrange
            var books = new List<Books>
            {
                new Books { Id = "1", Title = "Book 1", Author = "Author 1", Price = 100 },
                new Books { Id = "2", Title = "Book 2", Author = "Author 2", Price = 200 }
            };

            // Act
            _service.AddBooksBulk(books);

            // Assert
            _mockRepo.Verify(r => r.AddBooksBulk(books), Times.Once);
        }

        [Fact]
        public void UpdateBook_ValidBook_CallsRepository()
        {
            // Arrange
            var book = new Books { Id = "1", Title = "Updated", Author = "Author 1", Price = 150 };

            // Act
            _service.UpdateBook("1", book);

            // Assert
            _mockRepo.Verify(r => r.UpdateBook("1", book), Times.Once);
        }

        [Fact]
        public void DeleteBook_ExistingId_CallsRepository()
        {
            // Act
            _service.DeleteBook("1");

            // Assert
            _mockRepo.Verify(r => r.DeleteBook("1"), Times.Once);
        }
    }
}
.

C:\Users\ChandanG\source\repos\BookStoreAPI>(
echo C:\Users\ChandanG\source\repos\BookStoreAPI\BookStoreAPI.Tests\obj\Debug\net8.0\.NETCoreApp,Version=v8.0.AssemblyAttributes.cs  
 type "C:\Users\ChandanG\source\repos\BookStoreAPI\BookStoreAPI.Tests\obj\Debug\net8.0\.NETCoreApp,Version=v8.0.AssemblyAttributes.cs"  
 echo.. 
) 
C:\Users\ChandanG\source\repos\BookStoreAPI\BookStoreAPI.Tests\obj\Debug\net8.0\.NETCoreApp,Version=v8.0.AssemblyAttributes.cs
// <autogenerated />
using System;
using System.Reflection;
[assembly: global::System.Runtime.Versioning.TargetFrameworkAttribute(".NETCoreApp,Version=v8.0", FrameworkDisplayName = ".NET 8.0")]
.

C:\Users\ChandanG\source\repos\BookStoreAPI>(
echo C:\Users\ChandanG\source\repos\BookStoreAPI\BookStoreAPI.Tests\obj\Debug\net8.0\BookStoreAPI.Tests.AssemblyInfo.cs  
 type "C:\Users\ChandanG\source\repos\BookStoreAPI\BookStoreAPI.Tests\obj\Debug\net8.0\BookStoreAPI.Tests.AssemblyInfo.cs"  
 echo.. 
) 
C:\Users\ChandanG\source\repos\BookStoreAPI\BookStoreAPI.Tests\obj\Debug\net8.0\BookStoreAPI.Tests.AssemblyInfo.cs
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Reflection;

[assembly: System.Reflection.AssemblyCompanyAttribute("BookStoreAPI.Tests")]
[assembly: System.Reflection.AssemblyConfigurationAttribute("Debug")]
[assembly: System.Reflection.AssemblyFileVersionAttribute("1.0.0.0")]
[assembly: System.Reflection.AssemblyInformationalVersionAttribute("1.0.0+76cb3cf03fb861ce0dd237dd183a126ceb8b68ea")]
[assembly: System.Reflection.AssemblyProductAttribute("BookStoreAPI.Tests")]
[assembly: System.Reflection.AssemblyTitleAttribute("BookStoreAPI.Tests")]
[assembly: System.Reflection.AssemblyVersionAttribute("1.0.0.0")]

// Generated by the MSBuild WriteCodeFragment class.

.

C:\Users\ChandanG\source\repos\BookStoreAPI>(
echo C:\Users\ChandanG\source\repos\BookStoreAPI\BookStoreAPI.Tests\obj\Debug\net8.0\BookStoreAPI.Tests.GlobalUsings.g.cs  
 type "C:\Users\ChandanG\source\repos\BookStoreAPI\BookStoreAPI.Tests\obj\Debug\net8.0\BookStoreAPI.Tests.GlobalUsings.g.cs"  
 echo.. 
) 
C:\Users\ChandanG\source\repos\BookStoreAPI\BookStoreAPI.Tests\obj\Debug\net8.0\BookStoreAPI.Tests.GlobalUsings.g.cs
// <auto-generated/>
global using global::System;
global using global::System.Collections.Generic;
global using global::System.IO;
global using global::System.Linq;
global using global::System.Net.Http;
global using global::System.Threading;
global using global::System.Threading.Tasks;
global using global::Xunit;
.

C:\Users\ChandanG\source\repos\BookStoreAPI>(
echo C:\Users\ChandanG\source\repos\BookStoreAPI\Books_Infrastructure\Data\MongoDbContext.cs  
 type "C:\Users\ChandanG\source\repos\BookStoreAPI\Books_Infrastructure\Data\MongoDbContext.cs"  
 echo.. 
) 
C:\Users\ChandanG\source\repos\BookStoreAPI\Books_Infrastructure\Data\MongoDbContext.cs
﻿using Books_Core.Models;
using Microsoft.Extensions.Options;
using MongoDB.Driver;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;


namespace Books_Infrastructure.Data
{
    public class MongoDbContext
    {
        private readonly IMongoDatabase _database;

        public MongoDbContext(IOptions<BookstoreDatabaseSettings> settings)
        {
            var client = new MongoClient(settings.Value.ConnectionString);
            _database = client.GetDatabase(settings.Value.DatabaseName);
        }

        public IMongoCollection<Books> Books =>
            _database.GetCollection<Books>("Books");
    }
}
.

C:\Users\ChandanG\source\repos\BookStoreAPI>(
echo C:\Users\ChandanG\source\repos\BookStoreAPI\Books_Infrastructure\obj\Debug\net8.0\.NETCoreApp,Version=v8.0.AssemblyAttributes.cs  
 type "C:\Users\ChandanG\source\repos\BookStoreAPI\Books_Infrastructure\obj\Debug\net8.0\.NETCoreApp,Version=v8.0.AssemblyAttributes.cs"  
 echo.. 
) 
C:\Users\ChandanG\source\repos\BookStoreAPI\Books_Infrastructure\obj\Debug\net8.0\.NETCoreApp,Version=v8.0.AssemblyAttributes.cs
// <autogenerated />
using System;
using System.Reflection;
[assembly: global::System.Runtime.Versioning.TargetFrameworkAttribute(".NETCoreApp,Version=v8.0", FrameworkDisplayName = ".NET 8.0")]
.

C:\Users\ChandanG\source\repos\BookStoreAPI>(
echo C:\Users\ChandanG\source\repos\BookStoreAPI\Books_Infrastructure\obj\Debug\net8.0\Books_Infrastructure.AssemblyInfo.cs  
 type "C:\Users\ChandanG\source\repos\BookStoreAPI\Books_Infrastructure\obj\Debug\net8.0\Books_Infrastructure.AssemblyInfo.cs"  
 echo.. 
) 
C:\Users\ChandanG\source\repos\BookStoreAPI\Books_Infrastructure\obj\Debug\net8.0\Books_Infrastructure.AssemblyInfo.cs
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Reflection;

[assembly: System.Reflection.AssemblyCompanyAttribute("Books_Infrastructure")]
[assembly: System.Reflection.AssemblyConfigurationAttribute("Debug")]
[assembly: System.Reflection.AssemblyFileVersionAttribute("1.0.0.0")]
[assembly: System.Reflection.AssemblyInformationalVersionAttribute("1.0.0+0472d8c1c5b0d0cdefbcb7bac94e6549dac638be")]
[assembly: System.Reflection.AssemblyProductAttribute("Books_Infrastructure")]
[assembly: System.Reflection.AssemblyTitleAttribute("Books_Infrastructure")]
[assembly: System.Reflection.AssemblyVersionAttribute("1.0.0.0")]

// Generated by the MSBuild WriteCodeFragment class.

.

C:\Users\ChandanG\source\repos\BookStoreAPI>(
echo C:\Users\ChandanG\source\repos\BookStoreAPI\Books_Infrastructure\obj\Debug\net8.0\Books_Infrastructure.GlobalUsings.g.cs  
 type "C:\Users\ChandanG\source\repos\BookStoreAPI\Books_Infrastructure\obj\Debug\net8.0\Books_Infrastructure.GlobalUsings.g.cs"  
 echo.. 
) 
C:\Users\ChandanG\source\repos\BookStoreAPI\Books_Infrastructure\obj\Debug\net8.0\Books_Infrastructure.GlobalUsings.g.cs
// <auto-generated/>
global using global::System;
global using global::System.Collections.Generic;
global using global::System.IO;
global using global::System.Linq;
global using global::System.Net.Http;
global using global::System.Threading;
global using global::System.Threading.Tasks;
.

C:\Users\ChandanG\source\repos\BookStoreAPI>(
echo C:\Users\ChandanG\source\repos\BookStoreAPI\Books_Infrastructure\Repositories\BookRepository.cs  
 type "C:\Users\ChandanG\source\repos\BookStoreAPI\Books_Infrastructure\Repositories\BookRepository.cs"  
 echo.. 
) 
C:\Users\ChandanG\source\repos\BookStoreAPI\Books_Infrastructure\Repositories\BookRepository.cs
﻿using Books_Core.Interface;
using Books_Core.Models;
using Books_Infrastructure.Data;
using MongoDB.Driver;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Books_Infrastructure.Repositories
{
    public class BookRepository : IBookRepository
    {
        private readonly IMongoCollection<Books> _books;

        public BookRepository(MongoDbContext context)
        {
            _books = context.Books;
        }

        public List<Books> GetAllBooks() =>
            _books.Find(book => true).ToList();

        public Books? GetBookById(string id) =>
            _books.Find(book => book.Id == id).FirstOrDefault();

        public void AddBook(Books book) =>
            _books.InsertOne(book);

        public void AddBooksBulk(List<Books> books) =>
            _books.InsertMany(books);

        public void UpdateBook(string id, Books bookIn)
        {
            var updates = new List<UpdateDefinition<Books>>();
            var updateBuilder = Builders<Books>.Update;

            if (!string.IsNullOrEmpty(bookIn.Title))
                updates.Add(updateBuilder.Set(b => b.Title, bookIn.Title));

            if (!string.IsNullOrEmpty(bookIn.Author))
                updates.Add(updateBuilder.Set(b => b.Author, bookIn.Author));

            if (bookIn.Price > 0)
                updates.Add(updateBuilder.Set(b => b.Price, bookIn.Price));

            if (updates.Count == 0)
                throw new ArgumentException("No valid fields provided to update.");

            var updateDefinition = updateBuilder.Combine(updates);
            var result = _books.UpdateOne(book => book.Id == id, updateDefinition);

            if (result.MatchedCount == 0)
                throw new KeyNotFoundException($"Book with Id '{id}' not found.");
        }

        public void DeleteBook(string id)
        {
            var result = _books.DeleteOne(book => book.Id == id);
            if (result.DeletedCount == 0)
                throw new KeyNotFoundException($"Book with Id '{id}' not found.");
        }
    }
}
.

C:\Users\ChandanG\source\repos\BookStoreAPI>(
echo C:\Users\ChandanG\source\repos\BookStoreAPI\Books_Services\obj\Debug\net8.0\.NETCoreApp,Version=v8.0.AssemblyAttributes.cs  
 type "C:\Users\ChandanG\source\repos\BookStoreAPI\Books_Services\obj\Debug\net8.0\.NETCoreApp,Version=v8.0.AssemblyAttributes.cs"  
 echo.. 
) 
C:\Users\ChandanG\source\repos\BookStoreAPI\Books_Services\obj\Debug\net8.0\.NETCoreApp,Version=v8.0.AssemblyAttributes.cs
// <autogenerated />
using System;
using System.Reflection;
[assembly: global::System.Runtime.Versioning.TargetFrameworkAttribute(".NETCoreApp,Version=v8.0", FrameworkDisplayName = ".NET 8.0")]
.

C:\Users\ChandanG\source\repos\BookStoreAPI>(
echo C:\Users\ChandanG\source\repos\BookStoreAPI\Books_Services\obj\Debug\net8.0\Books_Services.AssemblyInfo.cs  
 type "C:\Users\ChandanG\source\repos\BookStoreAPI\Books_Services\obj\Debug\net8.0\Books_Services.AssemblyInfo.cs"  
 echo.. 
) 
C:\Users\ChandanG\source\repos\BookStoreAPI\Books_Services\obj\Debug\net8.0\Books_Services.AssemblyInfo.cs
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Reflection;

[assembly: System.Reflection.AssemblyCompanyAttribute("Books_Services")]
[assembly: System.Reflection.AssemblyConfigurationAttribute("Debug")]
[assembly: System.Reflection.AssemblyFileVersionAttribute("1.0.0.0")]
[assembly: System.Reflection.AssemblyInformationalVersionAttribute("1.0.0+76cb3cf03fb861ce0dd237dd183a126ceb8b68ea")]
[assembly: System.Reflection.AssemblyProductAttribute("Books_Services")]
[assembly: System.Reflection.AssemblyTitleAttribute("Books_Services")]
[assembly: System.Reflection.AssemblyVersionAttribute("1.0.0.0")]

// Generated by the MSBuild WriteCodeFragment class.

.

C:\Users\ChandanG\source\repos\BookStoreAPI>(
echo C:\Users\ChandanG\source\repos\BookStoreAPI\Books_Services\obj\Debug\net8.0\Books_Services.GlobalUsings.g.cs  
 type "C:\Users\ChandanG\source\repos\BookStoreAPI\Books_Services\obj\Debug\net8.0\Books_Services.GlobalUsings.g.cs"  
 echo.. 
) 
C:\Users\ChandanG\source\repos\BookStoreAPI\Books_Services\obj\Debug\net8.0\Books_Services.GlobalUsings.g.cs
// <auto-generated/>
global using global::System;
global using global::System.Collections.Generic;
global using global::System.IO;
global using global::System.Linq;
global using global::System.Net.Http;
global using global::System.Threading;
global using global::System.Threading.Tasks;
.

C:\Users\ChandanG\source\repos\BookStoreAPI>(
echo C:\Users\ChandanG\source\repos\BookStoreAPI\Books_Services\Services\BookServices.cs  
 type "C:\Users\ChandanG\source\repos\BookStoreAPI\Books_Services\Services\BookServices.cs"  
 echo.. 
) 
C:\Users\ChandanG\source\repos\BookStoreAPI\Books_Services\Services\BookServices.cs
﻿using Books_Core.Interface;
using Books_Core.Models;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Books_Services.Services
{
    public class BookService : IBookServices
    {
        private readonly IBookRepository _repository;

        public BookService(IBookRepository repository)
        {
            _repository = repository;
        }

        public List<Books> GetAllBooks() => _repository.GetAllBooks();
        public Books? GetBookById(string id) => _repository.GetBookById(id);
        public void AddBook(Books book) => _repository.AddBook(book);
        public void AddBooksBulk(List<Books> books) => _repository.AddBooksBulk(books);
        public void UpdateBook(string id, Books bookIn) => _repository.UpdateBook(id, bookIn);
        public void DeleteBook(string id) => _repository.DeleteBook(id);
    }
}
.
